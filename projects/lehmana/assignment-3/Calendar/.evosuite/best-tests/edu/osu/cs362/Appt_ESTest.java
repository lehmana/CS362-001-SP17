/*
 * This file was automatically generated by EvoSuite
 * Tue May 16 03:55:44 GMT 2017
 */

package edu.osu.cs362;

import org.junit.Test;
import static org.junit.Assert.*;
import edu.osu.cs362.Appt;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true) 
public class Appt_ESTest extends Appt_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Appt appt0 = new Appt(9, 9, 9, 9, 9, "GXdGh/LNC80Z\"", "GXdGh/LNC80Z\"");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t9/9/9 at 9:9am ,GXdGh/LNC80Z\", GXdGh/LNC80Z\"\n", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Appt appt0 = new Appt(23, 23, 23, 23, 23, "iqql/y)>LJ>?T\"uy)", "iqql/y)>LJ>?T\"uy)");
      assertEquals("iqql/y)>LJ>?T\"uy)", appt0.getDescription());
      assertEquals(23, appt0.getStartMonth());
      assertEquals(23, appt0.getStartMinute());
      assertEquals(23, appt0.getStartHour());
      assertEquals(23, appt0.getStartYear());
      assertEquals("iqql/y)>LJ>?T\"uy)", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(23, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Appt appt0 = new Appt(12, 0, 1, 12, 12, (String) null, "");
      boolean boolean0 = appt0.getValid();
      assertEquals(1, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(12, appt0.getStartMonth());
      assertEquals(12, appt0.getStartYear());
      assertEquals(12, appt0.getStartHour());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, (-2917), (-2917), "kxC+%H", "kxC+%H");
      assertEquals("kxC+%H", appt0.getTitle());
      
      appt0.setTitle("");
      appt0.getTitle();
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Appt appt0 = new Appt(59, 59, 0, 2, 0, ":{z_$", "`m3 '}<0ZZb");
      int int0 = appt0.getStartYear();
      assertEquals(2, appt0.getStartMonth());
      assertEquals(":{z_$", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("`m3 '}<0ZZb", appt0.getDescription());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(59, appt0.getStartHour());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Appt appt0 = new Appt(10, 10, 10, 10, (-2755), "Ak*E2u/][2<L9H^OTe", "javax.xml.datatype.Duration#isSet(DatatypeConstants.Field field)");
      int int0 = appt0.getStartYear();
      assertEquals("javax.xml.datatype.Duration#isSet(DatatypeConstants.Field field)", appt0.getDescription());
      assertTrue(appt0.getValid());
      assertEquals(10, appt0.getStartDay());
      assertEquals(10, appt0.getStartMonth());
      assertEquals((-2755), int0);
      assertEquals(10, appt0.getStartMinute());
      assertEquals(10, appt0.getStartHour());
      assertEquals("Ak*E2u/][2<L9H^OTe", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-1), 0, 999, "# Y~swUtZ|[x", "# Y~swUtZ|[x");
      int int0 = appt0.getStartMonth();
      assertEquals("# Y~swUtZ|[x", appt0.getTitle());
      assertEquals(0, int0);
      assertEquals(999, appt0.getStartYear());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(-1, appt0.getStartDay());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartHour());
      assertEquals("# Y~swUtZ|[x", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Appt appt0 = new Appt(4521, (-1858), 4521, 888, (-1858), "BlK__$:zlS<O'/uqd(", "BlK__$:zlS<O'/uqd(");
      int int0 = appt0.getStartMonth();
      assertFalse(appt0.getValid());
      assertEquals(4521, appt0.getStartDay());
      assertEquals(888, int0);
      assertEquals(-1858, appt0.getStartYear());
      assertEquals("BlK__$:zlS<O'/uqd(", appt0.getDescription());
      assertEquals("BlK__$:zlS<O'/uqd(", appt0.getTitle());
      assertEquals(4521, appt0.getStartHour());
      assertEquals(-1858, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 0, "R D@hba/!|[MY", "R D@hba/!|[MY");
      int int0 = appt0.getStartMinute();
      assertEquals("R D@hba/!|[MY", appt0.getTitle());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartYear());
      assertEquals("R D@hba/!|[MY", appt0.getDescription());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Appt appt0 = new Appt(0, 808, (-1134), (-2218), (-2218), "", "");
      int int0 = appt0.getStartMinute();
      assertEquals(808, int0);
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-1134, appt0.getStartDay());
      assertEquals(-2218, appt0.getStartYear());
      assertEquals(-2218, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 23, 0, 83, "Jz;.\"-n/&@za", "'X$y");
      int int0 = appt0.getStartHour();
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals("Jz;.\"-n/&@za", appt0.getTitle());
      assertEquals(83, appt0.getStartYear());
      assertEquals(0, int0);
      assertEquals("'X$y", appt0.getDescription());
      assertEquals(23, appt0.getStartDay());
      assertFalse(appt0.getValid());
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Appt appt0 = new Appt(4122, 431, 4122, 431, 4122, "N", "N");
      int int0 = appt0.getStartHour();
      assertEquals(4122, appt0.getStartDay());
      assertEquals(4122, appt0.getStartYear());
      assertEquals(4122, int0);
      assertEquals("N", appt0.getDescription());
      assertEquals(431, appt0.getStartMinute());
      assertEquals("N", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals(431, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Appt appt0 = new Appt(77, 77, 0, 0, 0, " ,", " ,");
      int int0 = appt0.getStartDay();
      assertEquals(0, int0);
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartYear());
      assertEquals(77, appt0.getStartHour());
      assertEquals(77, appt0.getStartMinute());
      assertEquals(" ,", appt0.getTitle());
      assertEquals(" ,", appt0.getDescription());
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Appt appt0 = new Appt(31, 59, 12, 59, 12, (String) null, (String) null);
      int int0 = appt0.getStartDay();
      assertEquals(59, appt0.getStartMonth());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(12, int0);
      assertFalse(appt0.getValid());
      assertEquals(31, appt0.getStartHour());
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Appt appt0 = new Appt(2521, 2521, 2521, 2521, 2521, "1y#}", "1y#}");
      String string0 = appt0.getDescription();
      assertEquals(2521, appt0.getStartYear());
      assertEquals(2521, appt0.getStartMinute());
      assertEquals(2521, appt0.getStartMonth());
      assertEquals(2521, appt0.getStartDay());
      assertEquals(2521, appt0.getStartHour());
      assertEquals("1y#}", appt0.getTitle());
      assertFalse(appt0.getValid());
      assertEquals("1y#}", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Appt appt0 = new Appt((-32), (-32), (-32), 810, (-32), (String) null, (String) null);
      appt0.setDescription("");
      assertEquals(-32, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals(-32, appt0.getStartHour());
      assertEquals(810, appt0.getStartMonth());
      assertEquals(-32, appt0.getStartMinute());
      assertEquals(-32, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Appt appt0 = new Appt((-32), (-32), (-32), 810, (-32), (String) null, (String) null);
      appt0.setDescription((String) null);
      assertEquals(-32, appt0.getStartDay());
      assertEquals(-32, appt0.getStartMinute());
      assertEquals(810, appt0.getStartMonth());
      assertEquals(-32, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(-32, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Appt appt0 = new Appt(0, (-5635), 0, (-5635), (-5635), "n7+o9#eu.u2H", "#getXMLSchemaType() :");
      assertEquals("n7+o9#eu.u2H", appt0.getTitle());
      
      appt0.setTitle("#getXMLSchemaType() :");
      assertEquals(-5635, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, 0, 23, (String) null, (String) null);
      appt0.setTitle((String) null);
      assertEquals(23, appt0.getStartYear());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals(0, appt0.getStartDay());
      assertEquals(0, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, (-2917), (-2917), "kxC+%H", "kxC+%H");
      String string0 = appt0.getTitle();
      assertEquals(0, appt0.getStartHour());
      assertEquals("kxC+%H", string0);
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
      assertEquals(-2917, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("kxC+%H", appt0.getDescription());
      assertEquals(-2917, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Appt appt0 = new Appt(0, 1258, (-3484), 0, (-451), "", "");
      int int0 = appt0.getStartDay();
      assertEquals(-451, appt0.getStartYear());
      assertEquals(0, appt0.getStartHour());
      assertFalse(appt0.getValid());
      assertEquals((-3484), int0);
      assertEquals(1258, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, (-1), 0, 999, "# Y~swUtZ|[x", "# Y~swUtZ|[x");
      boolean boolean0 = appt0.getValid();
      assertEquals("# Y~swUtZ|[x", appt0.getTitle());
      assertFalse(boolean0);
      assertEquals(0, appt0.getStartHour());
      assertEquals("# Y~swUtZ|[x", appt0.getDescription());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartMonth());
      assertEquals(-1, appt0.getStartDay());
      assertEquals(999, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Appt appt0 = new Appt((-859), (-859), (-1219), (-859), 0, "", "F>a.Eos$r%Z3Olt,^Lu");
      int int0 = appt0.getStartHour();
      assertEquals(-859, appt0.getStartMonth());
      assertEquals("", appt0.getTitle());
      assertEquals(-859, appt0.getStartMinute());
      assertFalse(appt0.getValid());
      assertEquals("F>a.Eos$r%Z3Olt,^Lu", appt0.getDescription());
      assertEquals(0, appt0.getStartYear());
      assertEquals(-1219, appt0.getStartDay());
      assertEquals((-859), int0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Appt appt0 = new Appt((-859), (-859), (-1219), (-859), 0, "", "F>a.Eos$r%Z3Olt,^Lu");
      int int0 = appt0.getStartMinute();
      assertEquals(-859, appt0.getStartMonth());
      assertEquals("F>a.Eos$r%Z3Olt,^Lu", appt0.getDescription());
      assertEquals(-859, appt0.getStartHour());
      assertEquals((-859), int0);
      assertEquals(-1219, appt0.getStartDay());
      assertEquals(0, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, "O]imV!?7^Aeq(@F", "");
      String string0 = appt0.getDescription();
      assertTrue(appt0.getValid());
      assertEquals(11, appt0.getStartHour());
      assertEquals(11, appt0.getStartYear());
      assertEquals(11, appt0.getStartMonth());
      assertEquals("", string0);
      assertEquals(11, appt0.getStartDay());
      assertEquals("O]imV!?7^Aeq(@F", appt0.getTitle());
      assertEquals(11, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, (-2917), (-2917), "kxC+%H", "kxC+%H");
      int int0 = appt0.getStartMonth();
      assertEquals(-2917, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("kxC+%H", appt0.getDescription());
      assertEquals("kxC+%H", appt0.getTitle());
      assertEquals((-2917), int0);
      assertEquals(0, appt0.getStartHour());
      assertEquals(0, appt0.getStartMinute());
      assertEquals(0, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 11, 11, 11, (String) null, (String) null);
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t11/11/11 at 11:11am ,, \n", string0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Appt appt0 = new Appt(31, 59, 12, 59, 12, (String) null, (String) null);
      String string0 = appt0.toString();
      assertEquals(12, appt0.getStartYear());
      assertEquals(59, appt0.getStartMonth());
      assertEquals(31, appt0.getStartHour());
      assertEquals(59, appt0.getStartMinute());
      assertEquals(12, appt0.getStartDay());
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      Appt appt0 = new Appt(11, 11, 677, 11, 677, "--", "--");
      assertEquals(11, appt0.getStartHour());
      assertEquals(677, appt0.getStartDay());
      assertEquals(11, appt0.getStartMonth());
      assertEquals(11, appt0.getStartMinute());
      assertEquals(677, appt0.getStartYear());
      assertFalse(appt0.getValid());
      assertEquals("--", appt0.getDescription());
      assertEquals("--", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      Appt appt0 = new Appt(0, 1258, (-3484), 0, (-451), "", "");
      assertEquals(1258, appt0.getStartMinute());
      
      appt0.setStartMinute((-451));
      assertEquals(-451, appt0.getStartMinute());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      Appt appt0 = new Appt((-973), 89, 89, (-877), 89, "", "am");
      int int0 = appt0.getStartYear();
      assertEquals(-877, appt0.getStartMonth());
      assertFalse(appt0.getValid());
      assertEquals(89, int0);
      assertEquals(-973, appt0.getStartHour());
      assertEquals("am", appt0.getDescription());
      assertEquals(89, appt0.getStartMinute());
      assertEquals(89, appt0.getStartDay());
      assertEquals("", appt0.getTitle());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      Appt appt0 = new Appt(0, 31, 31, 0, (-1), "", "");
      assertEquals(31, appt0.getStartMinute());
      
      appt0.setStartMinute(0);
      assertEquals(31, appt0.getStartDay());
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      Appt appt0 = new Appt(0, 0, 0, (-2917), (-2917), "kxC+%H", "kxC+%H");
      appt0.setStartYear((-1372));
      assertEquals(-1372, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test33()  throws Throwable  {
      Appt appt0 = new Appt(0, 31, 31, 0, (-1), "", "");
      assertEquals(31, appt0.getStartDay());
      
      appt0.setStartDay((-1));
      assertEquals(0, appt0.getStartHour());
  }

  @Test(timeout = 4000)
  public void test34()  throws Throwable  {
      Appt appt0 = new Appt(31, 59, 12, 59, 12, (String) null, (String) null);
      assertEquals(31, appt0.getStartHour());
      
      appt0.setStartHour(12);
      assertEquals(12, appt0.getStartYear());
  }

  @Test(timeout = 4000)
  public void test35()  throws Throwable  {
      Appt appt0 = new Appt(12, 0, 1, 12, 12, (String) null, "");
      appt0.setStartMonth((-265));
      assertEquals(-265, appt0.getStartMonth());
  }

  @Test(timeout = 4000)
  public void test36()  throws Throwable  {
      Appt appt0 = new Appt(12, 0, 1, 12, 12, (String) null, "");
      String string0 = appt0.toString();
      assertNotNull(string0);
      assertEquals("\t12/1/12 at 12:0pm ,, \n", string0);
  }
}
